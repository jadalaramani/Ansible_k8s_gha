name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:
permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.actor != 'github-actions[bot]'
    
    env:
      REGISTRY: docker.io
      IMAGE_NAME: ramanijadala/k8s

    steps:
      # === Checkout Code ===
      - name: Checkout Code
        uses: actions/checkout@v4

      # === Build Jar ===
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
     #===Build Artifactory===
      - name: Build JAR
        run: |
          cd Application
          mvn clean package -DskipTests

      # === SonarQube Scan ===
      - name: SonarQube Scan
        run: |
          cd Application
          mvn sonar:sonar \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

     # === Build Docker Image ===
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          cd Application
          docker build -t $REGISTRY/$IMAGE_NAME:${{ github.run_number }} .

      # # === Docker Image Scan ===
      - name: Scan Docker Image with Trivy
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_number }}
          severity: CRITICAL,HIGH
          ignore-unfixed: true

      # === Push Docker Image ===
      - name: Push Docker Image
        run: |
          docker push $REGISTRY/$IMAGE_NAME:${{ github.run_number }}

      # === Update Kubernetes Deployment manifest ===
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Checkout full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.MY_GITHUB_TOKEN }}
                  
      - name: Update K8s Deployment YAML
        run: |
          sed -i "s|k8s:.*|k8s:${{ github.run_number }}|g" Ansible/k8s_deployment.yaml
          git config user.name "jadalaramani"
          git config user.email "jadalaramani@gmail.com"
          git add Ansible/k8s_deployment.yaml
          git commit -m "Update deployment image tag to version ${{ github.run_number }}"
          git push

      # === Deploy to K8s using Ansible ===
      - name: Set up Ansible
        run: |
          sudo apt-get update && sudo apt-get install -y ansible
          python -m pip install --upgrade pip
          pip install ansible kubernetes openshift
          
      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube 
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Check cluster access
        run: kubectl get nodes

      - name: Run Ansible Playbook
        run: |
          ansible-playbook Ansible/ansible_k8s_deploy_playbook.yaml
